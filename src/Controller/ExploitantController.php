<?php

namespace App\Controller;

use App\Repository\ExploitantRepository;
use Doctrine\Persistence\ManagerRegistry;
use App\Entity\Admin\Exercice;
use App\Entity\References\Exploitant;
use App\Entity\Autorisation\Attribution;
use Knp\Component\Pager\PaginatorInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

class ExploitantController extends AbstractController
{
    private $exercice;
    private $totalExploitantExercice;
    private $exploitantList;

    public function __construct(ManagerRegistry $registry){
        $this->totalExploitantExercice = [];
        $this->exercice = $registry->getRepository(Exercice::class)->findOneBy([], ['id' => 'DESC']);
        $this->exploitantList = $registry->getRepository(Exploitant::class)->findAll();
    }
    #[Route('/exploitant-forestier', name: 'app_exploitant')]
    public function index(): Response
    {
        return $this->render('exploitant/index.html.twig',['exercice'=>$this->exercice]);
    }

    #[Route('/liste_exploitants', name: 'listeexploitants')]
    public function liste_exploitants(ManagerRegistry $registry): Response
    {

        foreach ($this->exploitantList as $exploitant) {
            $numeroExploitant = $exploitant->getNumeroExploitant();
            $raisonSocial = $exploitant->getRaisonSocialeExploitant();
            $marteau  = $exploitant->getMarteauExploitant();

            $attributions = $registry->getRepository(Attribution::class)->findOneBy([
                    'exercice' => $this->exercice,
                    'code_exploitant' => $numeroExploitant,
                ]);

            if($attributions ){
                $this->totalExploitantExercice[] = [
                    'code' => $exploitant->getNumeroExploitant(),
                    'raisonSocial' => $exploitant->getRaisonSocialeExploitant(),
                    'marteau' => $exploitant->getMarteauExploitant()
                ];
            }
        }
      
        return $this->render('exploitant/liste_complte.html.twig', [
            'liste'=>$this->totalExploitantExercice
        ]);

    }
    #[Route('/pdf_exploitants', name: 'liste_exploitants_pdf')]
    public function liste(ExploitantRepository $exploitantRepository,ManagerRegistry $registry): Response
    {
        foreach ($this->exploitantList as $exploitant) {
            $numeroExploitant = $exploitant->getNumeroExploitant();
            $raisonSocial = $exploitant->getRaisonSocialeExploitant();
            $marteau  = $exploitant->getMarteauExploitant();

            $attributions = $registry->getRepository(Attribution::class)->findOneBy([
                    'exercice' => $this->exercice,
                    'code_exploitant' => $numeroExploitant,
                ]);

            if($attributions ){
                $this->totalExploitantExercice[] = [
                    'code' => $exploitant->getNumeroExploitant(),
                    'raisonSocial' => $exploitant->getRaisonSocialeExploitant(),
                    'marteau' => $exploitant->getMarteauExploitant()
                ];
            }
        }


        return $this->render('exploitant/liste.html.twig', [
            'exploitants'=>$this->totalExploitantExercice
        ]);

    }


}
