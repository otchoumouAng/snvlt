<?php

namespace App\Repository;

use App\Entity\References\Exploitant;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * @extends ServiceEntityRepository<Exploitant>
 *
 * @method Exploitant|null find($id, $lockMode = null, $lockVersion = null)
 * @method Exploitant|null findOneBy(array $criteria, array $orderBy = null)
 * @method Exploitant[]    findAll()
 * @method Exploitant[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class ExploitantRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Exploitant::class);
    }

    public function save(Exploitant $entity, bool $flush = false): void
    {
        $this->getEntityManager()->persist($entity);

        if ($flush) {
            $this->getEntityManager()->flush();
        }
    }

    public function remove(Exploitant $entity, bool $flush = false): void
    {
        $this->getEntityManager()->remove($entity);

        if ($flush) {
            $this->getEntityManager()->flush();
        }
    }

    /**
     * @return Exploitant[] Returns an array of Exploitant objects
     */
    public function findbyEssence($essence): array
    {
        return $this->createQueryBuilder('e')
            ->andWhere('a.nom_essence = :$essence')
            ->setParameter('e.nom_essence', $essence)
            ->getQuery()
            ->getResult()
            ;
    }

    /**
     * @return Exploitant
     */
    public function findByCodeExploitant($value): ?Exploitant
    {
        return $this->createQueryBuilder('a')
            ->andWhere('a.numero_exploitant = :code')
            ->setParameter('code', $value)
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }

    public function CountExploitant()
    {
        return $this->createQueryBuilder('e')
            ->select('count(e.id_exploitant)')
            ->getQuery()
            ->getSingleResult()
            ;
    }
}
